name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings -D clippy::dbg_macro

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  cargo-verifications:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - command: fmt
            args: --all --verbose -- --check
          - command: clippy
            args: --all-targets --all-features
          - command: check
            args: --all-targets
          - command: check
            args: --all-targets --all-features
          - command: check
            args: --verbose --target thumbv6m-none-eabi --no-default-features
          - command: check
            args: --verbose --target thumbv6m-none-eabi --no-default-features --features alloc
          - command: check
            args: --verbose --target thumbv6m-none-eabi --no-default-features --features serde
          - command: test
            args: --all-targets --all-features
          - command: test
            args: --all-targets --no-default-features
          - command: test
            args: --all-targets --no-default-features --features serde
          - command: test
            args: --all-targets --no-default-features --features alloc
          - command: test
            args: --all-targets --features serde
    steps:
      - run: echo "pass"

  publish:
    # Only do this job if publishing a release
    needs:
      - cargo-verifications
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Verify tag version
        run: |
          curl -sSLf "https://github.com/TomWright/dasel/releases/download/v1.24.3/dasel_linux_amd64" -L -o dasel && chmod +x dasel
          mv ./dasel /usr/local/bin/dasel
          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} Cargo.toml

      - name: Publish crate
        uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
